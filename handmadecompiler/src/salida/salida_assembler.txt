
MOV R1, _y
ADD R1, _1
MOV @aux,R1
ASSEMBLER DE :=
ASSEMBLER DE >
ASSEMBLER CONDICION
MOV R1, _x1
ADD R1, _2
MOV @aux,R1
ASSEMBLER RET
ASSEMBLER THEN
ASSEMBLER DE /
ASSEMBLER RET
ASSEMBLER ELSE
ASSEMBLER CUERPO
ASSEMBLER IF
ASSEMBLER FUNCION
ASSEMBLER DE :=
ASSEMBLER INVOCACION_FUNCION
MOV R1, _var_1
ADD R1, _3
MOV @aux,R1
ASSEMBLER DE :=
ASSEMBLER OUTF
ASSEMBLER OUTF
MOV R1, _var_1
ADD R1, _3
MOV @aux,R1
ASSEMBLER OUTF
ASSEMBLER DE -
ASSEMBLER DE :=
ASSEMBLER CUERPO
ASSEMBLER DE =
ASSEMBLER CONDICION
MOV R1, _var_1
ADD R1, _1
MOV @aux,R1
ASSEMBLER DE :=
ASSEMBLER CUERPO
ASSEMBLER DE =
ASSEMBLER CONDICION
MOV R1, _2
ADD R1, _3
MOV @aux,R1
ASSEMBLER DE *
ASSEMBLER DE /
ASSEMBLER DE :=
ASSEMBLER TOS
ASSEMBLER DE :=
ASSEMBLER GOTO
ASSEMBLER PROGRAMA