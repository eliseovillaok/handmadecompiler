peperoni
begin
  uinteger VAR_U;
  U_VARIABLE;

  single FUN f(uinteger X)
	begin
	  uinteger XP;
	  
	  single FUN fi(uinteger XI)
	  begin
		IF (XI = YI) THEN
			begin
		    XI := YI + 2;
			REPEAT
			BEGIN
				XI := XI + 1;
				RET (XI);
			END
			UNTIL (XI > 100);
			RET (YI);
			END
		end_if;
	  end

	  XP := fi(X);
	  RET (XP);
	end
	
	/# Prueba de sentencias #/
	
	/# IMPRESION Y GOTO #/
	outf({ Hola mundo });
	goto polonia@;
	
	/# Comparaciones #/
	IF (prueba > 100) THEN
		prueba := 10;
	END_IF;
	
	IF (prueba < 100) THEN
		prueba := 10;
	END_IF;
	
	IF (prueba = 100) THEN
		prueba := 10;
	END_IF;
	
	IF (prueba >= 100) THEN
		prueba := 10;
	END_IF;
	
	IF (prueba <= 100) THEN
		prueba := 10;
	END_IF;
	
	IF (prueba != 100) THEN
		prueba := 10;
	END_IF;
	
	/# Conversion explicita #/
	TOS(prueba);
	TOS(3+4);
	TOS(3.2s+20 + 2.1);
	
	/# Declaracion de struct / ERROR XQ RECONOCE CADENA Y ESPERA UNA LLAVE { #/ 
	/#TYPEDEF STRUCT <uinteger,single> {
		var_uinteger,
		var_single
	} estructura_loca;#/
	
	estructura_loca.var_uinteger := 2;
	
	single VAR_SINGLE;
	VAR_SINGLE := f(100);

end
